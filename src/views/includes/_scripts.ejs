<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"
    integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.25.0/axios.min.js"
    integrity="sha512-/Q6t3CASm04EliI1QyIDAA/nDo9R8FQ/BULoUFyN4n/BDdyIxeH7u++Z+eobdmr11gG5D/6nPFyDlnisDwhpYA=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>

<script>
    var data;
    var config;
    var response;
    var route;
    var baseUrl = `https://api-v2-staging.becued.com/api/v2/admin`;
    // var baseUrl = `http://localhost:8080/api/v2/admin`;
    var defaultAvatarUrl =
        `https://res.cloudinary.com/becued-technologies/image/upload/v1642027179/becued/assets/avatar_umteho.png`;
    var timeout = 3000;
    var header = {
        'Authorization': 'Bearer ' + localStorage.getItem('token')
    };
    var message = "";
    var title = "";
    var token;
    var userData;
    var newHtml = "";
    var bookingHtml = "";
    var acceptHtml = "";
    var pendingHtml = "";
    var declinedHtml = "";
    var waitNewHtml = "";
    var fanNewHtml = "";
    var celebNewHtml = "";
    var partnerNewHtml = "";
    var talentNewHtml = "";
    var thisfanHtml = "";
    var thiscelebHtml = "";
    var dateOption = {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    };






    autoRedirect();



    // Login Admin
    async function basicLogin() {

        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            data = new FormData(formElem);
            route = `${baseUrl}/auth/login`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: data
            };

            const response = await axios(config);

            token = localStorage.setItem('token', response.data.token);
            userData = localStorage.setItem('user', JSON.stringify(response.data.data));

            messageAlert(`<h5>Welcome back ${response.data.data.username}</h5>
            <p>You haven't missed much</p>`, `success`);

            setTimeout(() => {
                location.href = `/dashboard`;
            }, 2000);

        } catch (error) {
            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }
        }

    }

    // Register Admin
    async function basicRegister() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            data = new FormData(formElem);
            route = `${baseUrl}/auth/register`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: data
            };

            const response = await axios(config);

            document.querySelector('form').reset();


            messageAlert(`<h5>Account created!</h5>
                        <p>You will be redirected to login</p>`, `success`);

            setTimeout(() => {
                location.href = `/auth/login`;
            }, 2000);

        } catch (error) {
            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }
        }
    }

    // Logout
    function logout() {
        localStorage.clear();
        setTimeout(() => {
            location.href = `/auth/login`;
        }, 1000);
    }

    // Check isLoggedIn
    async function isLoggedIn() {
        const userToken = localStorage.getItem('token');

        if (!userToken) {
            return false;
        } else {
            return true;
        }
    }


    // Auto redirect
    async function autoRedirect() {
        const validLogin = await isLoggedIn();

        if (location.pathname !== '/auth/register') {
            if (!validLogin && location.pathname !== '/auth/login') redirect('/auth/login');
        }



    }

    // Run Endpoint handshake
    async function handShake(val) {

        try {

        } catch (error) {


        }



    }

    function redirect(route) {
        location.href = route;
    }

    // Toaastr alert message
    function messageAlert(message, status) {
        toastr.clear();
        NioApp.Toast(message,
            status);
    }
</script>