<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.25.0/axios.min.js"
    integrity="sha512-/Q6t3CASm04EliI1QyIDAA/nDo9R8FQ/BULoUFyN4n/BDdyIxeH7u++Z+eobdmr11gG5D/6nPFyDlnisDwhpYA=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>
    $(document).ready(function () {
        $('.summernote-basic').summernote({
            height: 200,
            placeholder: 'Please change text color to white and background color to black'
        });
    });
    var data, config, response, route;


    // var baseUrl = `https://api-v2-staging.becued.com/api/v2/admin`;
    var baseUrl = `http://localhost:8000/api/v2/admin`;
    var defaultAvatarUrl =
        `https://res.cloudinary.com/becued-technologies/image/upload/v1642027179/becued/assets/avatar_umteho.png`;
    var timeout = 3000;
    var header = {
        'Authorization': 'Bearer ' + localStorage.getItem('token')
    };

    var message, title, token, userData, newHtml, bookingHtml, acceptHtml, pendingHtml, declinedHtml, waitNewHtml,
        fanNewHtml, thisTransHtml, thisHistoryHtml, thisActivityHtml, thisActHtml,
        celebNewHtml, partnerNewHtml, talentNewHtml, thisfanHtml, thiscelebHtml = "";
    var dateOption = {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    };






    autoRedirect();



    // Login Admin
    async function basicLogin() {

        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            data = new FormData(formElem);
            // route = `${baseUrl}/auth/login`;
            route = `/auth/login-admin`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: data
            };

            const response = await axios(config);


            token = localStorage.setItem('token', response.data.token);
            userData = localStorage.setItem('user', JSON.stringify(response.data.data));

            messageAlert(`<h5>Welcome back ${response.data.data.username}</h5>
            <p>You haven't missed much</p>`, `success`);



            setTimeout(() => {
                location.href = `/dashboard`;
            }, 2000);

        } catch (error) {
            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }
        }

    }

    // Register Admin
    async function basicRegister() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            data = new FormData(formElem);
            route = `${baseUrl}/auth/register`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: data
            };

            const response = await axios(config);

            document.querySelector('form').reset();


            messageAlert(`<h5>Account created!</h5>
                        <p>You will be redirected to login</p>`, `success`);

            setTimeout(() => {
                location.href = `/auth/login`;
            }, 2000);

        } catch (error) {
            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }
        }
    }


    // Forgot Password...
    async function passwordReset() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            data = new FormData(formElem);
            route = `/auth/forgotpassword`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: data
            };

            const response = await axios(config);

            document.querySelector('form').reset();

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');


            messageAlert(`<h5>Success!</h5>
             <p>${response.data.message}</p>`, `success`);

        } catch (error) {
            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
         <p>${error.response.data.message}</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
         <p>${error.message}</p>`, `error`);
            }
        }
    }



    // Reset Password
    async function resetPassword() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            data = new FormData(formElem);
            route = `/auth/resetpassword`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: data
            };

            const response = await axios(config);

            document.querySelector('form').reset();

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');


            messageAlert(`<h5>Success!</h5>
        <p>${response.data.message}</p>`, `success`);


            setTimeout(() => {
                location.href = `/auth/login`;
            }, 2000);

        } catch (error) {
            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
        <p>${error.response.data.message}</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
        <p>${error.message}</p>`, `error`);
            }
        }
    }


    // Logout
    async function logout() {
        localStorage.clear();

        data = {};
        // route = `${baseUrl}/auth/login`;
        route = `/auth/logout-admin`;
        config = {
            method: 'post',
            headers: header,
            url: route,
            data: data
        };

        const response = await axios(config);


        setTimeout(() => {
            location.href = `/auth/login`;
        }, 1000);
    }

    // Check isLoggedIn
    async function isLoggedIn() {
        const userToken = localStorage.getItem('token');

        if (!userToken) {
            return false;
        } else {
            return true;
        }
    }


    // Auto redirect
    async function autoRedirect() {
        const validLogin = await isLoggedIn();

        if (location.pathname !== '/auth/register' && location.pathname !== '/auth/forgot-password' && location
            .pathname !==
            '/auth/reset-password') {
            if (!validLogin && location.pathname !== '/auth/login') redirect('/auth/login');
        }



    }

    function redirect(route) {
        location.href = route;
    }

    // Toaastr alert message
    function messageAlert(message, status) {
        toastr.clear();
        NioApp.Toast(message,
            status);
    }


    function exportTableToExcel(tableID, filename = '') {
        var downloadLink;
        var dataType = 'application/vnd.ms-excel';
        var tableSelect = document.getElementById(tableID);
        var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

        // Specify file name
        filename = filename ? filename + '.xls' : 'excel_data.xls';

        // Create download link element
        downloadLink = document.createElement("a");

        document.body.appendChild(downloadLink);

        if (navigator.msSaveOrOpenBlob) {
            var blob = new Blob(['\ufeff', tableHTML], {
                type: dataType
            });
            navigator.msSaveOrOpenBlob(blob, filename);
        } else {
            // Create a link to the file
            downloadLink.href = 'data:' + dataType + ', ' + tableHTML;

            // Setting the file name
            downloadLink.download = filename;

            //triggering the function
            downloadLink.click();
        }
    }
</script>