<script>
    $(document).ready(function () {
        $("#default-04").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $(".nk-tb-item").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        $('#myTranxhistory').DataTable();

    });

    // Rendering to header 
    $('#headerUserDropdown').html(`
        <a href="javascript:void()" class="dropdown-toggle mr-n1" data-toggle="dropdown">
            <div class="user-toggle">
                <div class="user-avatar sm">
                    <img src="${JSON.parse(localStorage.getItem('user')).avatar}"
                        alt="${JSON.parse(localStorage.getItem('user')).username}" />
                </div>
                <div class="user-info d-none d-xl-block">
                    <div class="user-status user-status-verified">
                        ${JSON.parse(localStorage.getItem('user')).accountType.charAt(0).toUpperCase() +
        JSON.parse(localStorage.getItem('user')).accountType.slice(1)} Admin</div>
                    <div class="user-name dropdown-indicator">
                        ${JSON.parse(localStorage.getItem('user')).username.charAt(0).toUpperCase() +
        JSON.parse(localStorage.getItem('user')).username.slice(1)}</div>
                </div>
            </div>
        </a>
        <div class="dropdown-menu dropdown-menu-md dropdown-menu-right">
            <div class="dropdown-inner user-card-wrap bg-lighter d-none d-md-block">
                <div class="user-card">
                    <div class="user-avatar">
                        <img src="${JSON.parse(localStorage.getItem('user')).avatar}"
                            alt="${JSON.parse(localStorage.getItem('user')).username}" />
                    </div>
                    <div class="user-info">
                        <span
                            class="lead-text">${JSON.parse(localStorage.getItem('user')).username.toUpperCase()}</span>
                        <span class="sub-text">${JSON.parse(localStorage.getItem('user')).email}</span>
                    </div>
                </div>
            </div>
            <div class="dropdown-inner">
                <ul class="link-list">
                    <li><a href="javascript:void()"><em class="icon ni ni-user-alt"></em><span>View
                                Profile</span></a></li>
                    <li><a href="javascript:void()"><em class="icon ni ni-setting-alt"></em><span>Account
                                Setting</span></a></li>
                    <li><a href="javascript:void()"><em class="icon ni ni-activity-alt"></em><span>Login
                                Activity</span></a></li>
                    <li><a class="dark-switch" href="javascript:void()"><em class="icon ni ni-moon"></em><span>Dark
                                Mode</span></a>
                    </li>
                </ul>
            </div>
            <div class="dropdown-inner">
                <ul class="link-list">
                    <li><a href="javascript:void(0)" onclick="logout()"><em
                                class="icon ni ni-signout"></em><span>Sign
                                out</span></a></li>
                </ul>
            </div>
        </div>
    `);


    // Get Total earnings
    async function getEarnings() {
        try {

            $("#totalEarnings, #celebEarnings").html(`
            <div class="data-group">
                <div class="amount">
                    <div class="spinner-grow text-secondary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    </div>
                <div class="nk-ecwg6-ck">
                    <canvas class="ecommerce-line-chart-s3" id="todayRevenue"></canvas>
                </div>
            </div>
            `);

            var sum = 0;
            route = `${baseUrl}/menu`;
            config = {
                method: 'get',
                headers: header,
                url: route
            };

            response = await axios(config);



            $("#totalEarnings, #celebEarnings").html(`
                <div class="data-group">
                    <div class="amount">${response.data.data.user}</div>
                    <div class="nk-ecwg6-ck">
                        <canvas class="ecommerce-line-chart-s3" id="todayRevenue"></canvas>
                    </div>
                </div>
            `);

        } catch (error) {

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}. Retry login</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }

        }
    }
    getEarnings();





    // Get Total Celebrities ...
    async function getCelebs() {
        try {

            $("#allListedCelebs").html(`
            <div class="nk-tb-col">
                <span class="tb-lead">
                    <div class="spinner-grow text-secondary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </span>
            </div>
            `);
            celebNewHtml = "";

            $("#totalFarms").html(`
    <div class="data-group">
        <div class="amount">
            <div class="spinner-grow text-secondary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            </div>
        <div class="nk-ecwg6-ck">
            <canvas class="ecommerce-line-chart-s3" id="todayCustomers"></canvas>
        </div>
    </div>
    `);

            var sum = 0;
            route = `${baseUrl}/menu`;
            config = {
                method: 'get',
                headers: header,
                url: route
            };

            response = await axios(config);

            $("#allListedCelebs").html('');


            $("#totalFarms").html(` <div class="data-group">
                <div class="amount">${response.data.data.farm}</div>
                <div class="nk-ecwg6-ck">
                    <canvas class="ecommerce-line-chart-s3" id="todayCustomers"></canvas>
                </div>
            </div>
        `);


            $('#totalFarmsCount').text(`You have total ${response.data.data.farm} farms`);



        } catch (error) {

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}. Retry login</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }

        }
    }
    getCelebs();

    // Get Total Fans ...

    async function getFans() {
        try {

            $("#allListedFans").html(`
            <div class="nk-tb-col">
                <span class="tb-lead">
                    <div class="spinner-grow text-secondary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </span>
            </div>
            `);
            fanNewHtml = "";

            $("#totalFans").html(`
        <div class="data-group">
            <div class="amount">
                <div class="spinner-grow text-secondary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <div class="nk-ecwg6-ck">
                <canvas class="ecommerce-line-chart-s3" id="todayVisitors"></canvas>
            </div>
        </div>
        `);

            var sum = 0;
            route = `${baseUrl}/menu`;
            config = {
                method: 'get',
                headers: header,
                url: route
            };

            response = await axios(config);


            $("#allListedFans").html('');


            $("#totalFans").html(` <div class="data-group">
                <div class="amount">${response.data.data.crops}</div>
                <div class="nk-ecwg6-ck">
                    <canvas class="ecommerce-line-chart-s3" id="todayVisitors"></canvas>
                </div>
            </div>
        `);


        } catch (error) {

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}. Retry login</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }

        }
    }
    getFans();



    async function getAllUser() {
        try {

            $("#allListedUsers").html(`
            <div class="nk-tb-col">
                <span class="tb-lead">
                    <div class="spinner-grow text-secondary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </span>
            </div>
            `);
            fanNewHtml = "";

            $("#totalFans").html(`
        <div class="data-group">
            <div class="amount">
                <div class="spinner-grow text-secondary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <div class="nk-ecwg6-ck">
                <canvas class="ecommerce-line-chart-s3" id="todayVisitors"></canvas>
            </div>
        </div>
        `);

            var sum = 0;
            route = `${baseUrl}/user`;
            config = {
                method: 'get',
                headers: header,
                url: route
            };

            response = await axios(config);


            $("#allListedUsers").html('');




            $('#totalUsersCount').text(`You have total ${response.data.data.length} user(s)`);


            for (let i = 0; i < response.data.data.length; i++) {
                const element = response.data.data[i];
                fanNewHtml += `
                <div class="nk-tb-item">
                <div class="nk-tb-col nk-tb-col-check">
                    <div class="custom-control custom-control-sm custom-checkbox notext">
                        <input type="checkbox" class="custom-control-input" id="uid1">
                        <label class="custom-control-label" for="uid1"></label>
                    </div>
                </div>
                <div class="nk-tb-col">
                    <a href="/dashboard/userprofile?_userId=${element._id}">
                        <div class="user-card">
                            <div class="user-avatar bg-primary">
                                <img src="${element.avatar == null ? defaultAvatarUrl : element.avatar}">
                            </div>
                            <div class="user-info">
                                <span class="tb-lead">${element.fullName} <span
                                        class="dot dot-success d-md-none ml-1"></span></span>
                                <span>${element.email}</span>
                            </div>
                        </div>
                    </a>
                </div>

                <div class="nk-tb-col tb-col-md">
                    <span>${element.phoneNumber == null ? '-' : element.phoneNumber}</span>
                </div>
                
                <div class="nk-tb-col tb-col-lg">
                    <span>${new Date(element.created_at).toLocaleString('en-GB', dateOption)}</span>
                </div>
                <div class="nk-tb-col tb-col-md">
                    <span
                        class="tb-status ${element.status == 'active' ? `text-success` : `text-danger`}">${element.status
                        == null ? `active` : element.status}</span>
                </div>
                <div class="nk-tb-col nk-tb-col-tools">
                    <ul class="nk-tb-actions gx-1">
                        <li class="nk-tb-action-hidden">
                            <a href="javascript:void(0)" onclick="sendMail('fanprofile', '${element._id}')"
                                class="btn btn-trigger btn-icon" data-toggle="tooltip" data-placement="top"
                                title="Send Email">
                                <em class="icon ni ni-mail-fill"></em>
                            </a>
                        </li>



                        ${element.status == `active` ? `<li class="nk-tb-action-hidden">
                            <a href="javascript:void(0)" onclick="accountState('fanaccount', '${element._id}')"
                                class="btn btn-trigger btn-icon" data-toggle="tooltip" data-placement="top"
                                title="Deactivate">
                                <em class="icon ni ni-user-cross-fill"></em>
                            </a>
                        </li>` : `<li class="nk-tb-action-hidden">
                            <a href="javascript:void(0)" onclick="activateaccountState('fanaccount', '${element._id}')"
                                class="btn btn-trigger btn-icon" data-toggle="tooltip" data-placement="top"
                                title="Activate">
                                <em class="icon ni ni-user-check-fill"></em>
                            </a>
                        </li>`}
                        <li>
                            <div class="drodown">
                                <a href="javascript:void()" class="dropdown-toggle btn btn-icon btn-trigger"
                                    data-toggle="dropdown"><em class="icon ni ni-more-h"></em></a>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <ul class="link-list-opt no-bdr">
                                        <li><a href="/dashboard/userprofile?_userId=${element._id}"><em
                                                    class="icon ni ni-eye"></em><span>View
                                                    Details</span></a></li>
                                        <li><a href="javascript:void(0)"
                                                onclick="sendMail('fanprofile', '${element._id}')"><em
                                                    class="icon ni ni-repeat"></em><span>Send
                                                    Email</span></a>
                                        </li>

                                        ${element.status == `active` ? `<li><a href="javascript:void(0)"
                                                onclick="accountState('fanaccount', '${element._id}')"><em
                                                    class="icon ni ni-activity-round"></em><span>Deactivate</span></a>
                                        </li>` : `<li><a href="javascript:void(0)"
                                                onclick="activateaccountState('fanaccount', '${element._id}')"><em
                                                    class="icon ni ni-activity-round"></em><span>Activate</span></a>
                                        </li>`}




                                        <li><a href="javascript:void(0)"
                                                onclick="remove('fanaccount', '${element._id}')"><em
                                                    class="icon ni ni-trash"></em><span>Remove</span></a>
                                        </li>


                                    </ul>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
                </div>
                `;
            }

            $("#allListedUsers").append(`<div class="nk-tb-item nk-tb-head">
                    <div class="nk-tb-col nk-tb-col-check">
                        <div class="custom-control custom-control-sm custom-checkbox notext">
                            <input type="checkbox" class="custom-control-input" id="uid">
                            <label class="custom-control-label" for="uid"></label>
                        </div>
                    </div>
                    <div class="nk-tb-col"><span class="sub-text">User</span></div>
                    <div class="nk-tb-col tb-col-md"><span class="sub-text">Phone</span></div>
                    <div class="nk-tb-col tb-col-lg"><span class="sub-text">Date Created</span></div>
                    <div class="nk-tb-col tb-col-md"><span class="sub-text">Status</span></div>
                    <div class="nk-tb-col nk-tb-col-tools">
                        <ul class="nk-tb-actions gx-1 my-n1">
                            <li>
                                <div class="drodown">
                                    <a href="javascript:void()" class="dropdown-toggle btn btn-icon btn-trigger mr-n1"
                                        data-toggle="dropdown"><em class="icon ni ni-more-h"></em></a>

                                </div>
                            </li>
                        </ul>
                    </div>
                </div>${fanNewHtml}
                </div>`);



        } catch (error) {

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}. Retry login</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }

        }
    }
    getAllUser();




    // Get Recent Bookings
    async function getRecentBookings() {
        try {

            $("#recentBookings").html(`
        <div class="nk-tb-col">
            <span class="tb-lead">
                <div class="spinner-grow text-secondary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                </span>
        </div>
        `);

            var sum = 0;
            route = `${baseUrl}/user`;
            config = {
                method: 'get',
                headers: header,
                url: route
            };

            response = await axios(config);


            $("#recentBookings").html('');
            newHtml = "";

            for (let i = 0; i < response.data.data.length; i++) {
                const element = response.data.data[i];

                newHtml += `
                <div class="nk-tb-item">

                <div class="nk-tb-col">
                    <a href="/dashboard/userprofile?_userId=${element._id}" class="">
                        <div class="user-card">
                            <div class="user-avatar sm bg-purple-dim">
                                <img src="${element.avatar == `NULL` ? defaultAvatarUrl : element.avatar}"
                                    alt="${element._id}" />
                            </div>
                            <div class="user-info">
                                <span class="tb-lead">${element.fullName}<span
                                        class="dot dot-success d-md-none ml-1"></span></span>
                                <span>${element.email}</span>
                            </div>
                        </div>
                    </a>
                </div>



                <div class="nk-tb-col">
                    <span class="tb-sub tb-amount">${element.phoneNumber}
                        </span>
                </div>
                <div class="nk-tb-col tb-col-md">
                    <span class="tb-sub">${new Date(element.created_at).toLocaleString('en-GB', dateOption)}</span>
                    
                </div>
                <div class="nk-tb-col">
                    <span class="tb-sub tb-amount">${element.businessName}
                        </span>
                </div>
                <div class="nk-tb-col">
                    <span class="badge badge-dot badge-dot-xs ${element.status == "inactive" ?
                        `badge-danger` : `badge-success`}">${element.status}</span>
                </div>
                </div>
                `;
            }


            $("#recentBookings").append(`<div class="nk-tb-list mt-n2">
                <div class="nk-tb-item nk-tb-head">
                <div class="nk-tb-col"><span>User</span></div>
                <div class="nk-tb-col tb-col-md"><span>Phone Number</span></div>
                <div class="nk-tb-col tb-col-md"><span>Date Created</span></div>
                <div class="nk-tb-col"><span>Farm</span></div>
                <div class="nk-tb-col"><span class="d-none d-sm-inline">Status</span></div>
            </div>${newHtml}</div>`);

        } catch (error) {

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}. Retry login</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }

        }
    }
    getRecentBookings();



    // Get Fans Profile
    async function getFansProfile() {
        try {
            var _userId = new URLSearchParams(window.location.search).get('_userId');

            if (_userId != null) {

                $("#thisfansprofile").html(`
                <div class="nk-tb-col">
                    <span class="tb-lead">
                        <div class="spinner-grow text-secondary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </span>
                </div>
                `);


                route = `${baseUrl}/user/${_userId}`;
                config = {
                    method: 'get',
                    headers: header,
                    url: route
                };

                response = await axios(config);

                console.log(response);


                $("#thisfansprofile").html("");

                thisfanHtml = "";



                thisfanHtml = `<div class="card-inner card-inner-lg">
                    <div class="nk-block-head nk-block-head-lg">
                        <div class="nk-block-between">
                            <div class="nk-block-head-content">
                                <h4 class="nk-block-title">Personal Information</h4>
                                <div class="nk-block-des">
                                    <p>Basic info, like your name and address, that's used on Growng.
                                    </p>
                                </div>
                            </div>
                            <div class="nk-block-head-content align-self-start d-lg-none">
                                <a href="#" class="toggle btn btn-icon btn-trigger mt-n1" data-target="userAside"><em
                                        class="icon ni ni-menu-alt-r"></em></a>
                            </div>
                        </div>

                       
                    </div>
                    <div class="nk-block">
                        <div class="nk-data data-list">
                            <div class="data-head">
                                <h6 class="overline-title">Basics</h6>
                            </div>
                            <div class="data-item" data-toggle="modal" data-target="#profile-edit">
                                <div class="data-col">
                                    <span class="data-label">Full Name</span>
                                    <span class="data-value">${response.data.data.fullName}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more"><em
                                            class="icon ni ni-forward-ios"></em></span></div>
                            </div>
                           
                            <div class="data-item">
                                <div class="data-col">
                                    <span class="data-label">Email</span>
                                    <span class="data-value">${response.data.data.email}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more disable"><em
                                            class="icon ni ni-lock-alt"></em></span></div>
                            </div>
                            <div class="data-item" >
                                <div class="data-col">
                                    <span class="data-label">Phone Number</span>
                                    <span class="data-value text-soft">${response.data.data.phoneNumber}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more"><em
                                            class="icon ni ni-forward-ios"></em></span></div>
                            </div>
                            <div class="data-item" >
                                <div class="data-col">
                                    <span class="data-label">Farm Name</span>
                                    <span class="data-value">${response.data.data.businessName}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more"><em
                                            class="icon ni ni-forward-ios"></em></span></div>
                            </div>
                            <div class="data-item" >
                                <div class="data-col">
                                    <span class="data-label">Farm Location</span>
                                    <span class="data-value">${response.data.data.farmLocation}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more"><em
                                            class="icon ni ni-forward-ios"></em></span></div>
                            </div>
                            <div class="data-item" >
                                <div class="data-col">
                                    <span class="data-label">City & State</span>
                                    <span class="data-value">${response.data.data.cityState}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more"><em
                                            class="icon ni ni-forward-ios"></em></span></div>
                            </div>

                            <div class="data-item" >
                                <div class="data-col">
                                    <span class="data-label">Account Status</span>
                                    <span class="data-value text-soft">${response.data.data.status}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more"><em
                                            class="icon ni ni-forward-ios"></em></span></div>
                            </div>
                          

                            <div class="data-item" >
                                <div class="data-col">
                                    <span class="data-label">Date Added</span>
                                    <span class="data-value text-soft">${new
                                        Date(response.data.data.created_at).toLocaleString('en-GB', dateOption)}</span>
                                </div>
                                <div class="data-col data-col-end"><span class="data-more"><em
                                            class="icon ni ni-forward-ios"></em></span></div>
                            </div>
                           
                        </div>
                        
                    </div>
                </div>
                <div class="card-aside card-aside-left user-aside toggle-slide toggle-slide-left toggle-break-lg"
                    data-content="userAside" data-toggle-screen="lg" data-toggle-overlay="true">
                    <div class="card-inner-group" data-simplebar>
                        <div class="card-inner">
                            <div class="user-card">
                                <div class="user-avatar">
                                    <img src="${response.data.data.avatar}" alt="${response.data.data.fullName}" />
                                </div>
                                <div class="user-info">
                                    <span class="lead-text">${response.data.data.fullName}</span>
                                    <span class="sub-text">${response.data.data.email}</span>
                                </div>

                            </div>
                        </div>
                       
                        <div class="card-inner p-0">
                            <ul class="link-list-menu">
                                <li><a class="active"
                                        href="/dashboard/userprofile?_userId=${response.data.data._id}"><em
                                            class="icon ni ni-user-fill-c"></em><span>Personal
                                            Infomation</span></a></li>

                                            <li><a
                                                    href="/dashboard/useraccountactivity?_userId=${response.data.data._id}"><em
                                                        class="icon ni ni-activity-round-fill"></em><span>Account
                                                        Activity</span></a></li>

                                <li><a
                                        href="/dashboard/useranalytics?_userId=${response.data.data._id}"><em
                                            class="icon ni ni-bell-fill"></em><span>Analytics</span></a>
                                </li>
                                
                            </ul>
                        </div>
                    </div>
                </div>`;



                $("#thisfansprofile").html(thisfanHtml);



            }

        } catch (error) {

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
        <p>${error.response.data.message}. Retry login</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
        <p>${error.message}</p>`, `error`);
            }

        }
    }

    getFansProfile();




    // Get Fan Activity Log
    async function getFanActivityLog() {
        try {
            var _userId = new URLSearchParams(window.location.search).get('_userId');

            if (_userId != null) {

                $("#thisusersactivitylog").html(`
        <div class="nk-tb-col">
            <span class="tb-lead">
                <div class="spinner-grow text-secondary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </span>
        </div>
        `);


                route = `${baseUrl}/user/activity/${_userId}`;
                config = {
                    method: 'get',
                    headers: header,
                    url: route
                };

                response = await axios(config);

                $("#thisusersactivitylog").html("");

                thisActHtml, thisActivityHtml = "";

                if (response.data.data.history.length == 0) {
                    thisActivityHtml = `<tr>
            <td colspan="3" align="center">No activity log</td>
        </tr>`;
                } else {
                    for (let i = 0; i < response.data.data.history.length; i++) {
                        const
                            activityElement = response.data.data.history[i];
                        thisActivityHtml += `<tr>
            <td>${new Date(activityElement.created_at).toLocaleString('en-GB', dateOption)}</td>
            <td>${activityElement.information}</td>
            <td>${activityElement.status}</td>
            </tr>`;

                    }

                }



                thisActHtml = `<div class="card-inner card-inner-lg">
                <div class="nk-block-head nk-block-head-lg">
                    <div class="nk-block-between">
                        <div class="nk-block-head-content">
                            <h4 class="nk-block-title">Activity Log</h4>
                            <div class="nk-block-des">
                                <p>All users activity as monitored on the platform is recorded here
                                </p>
                            </div>
                        </div>
                        <div class="nk-block-head-content align-self-start d-lg-none">
                            <a href="#" class="toggle btn btn-icon btn-trigger mt-n1" data-target="userAside"><em
                                    class="icon ni ni-menu-alt-r"></em></a>
                        </div>
                    </div>
                </div>
                <div class="nk-block">
                    <div class="nk-data data-list table-responsive">
                        <table class="table table-striped table-bordered" id="myTranxhistory">

                            <thead>

                                <tr>

                                    <td>Date</td>
                                    <td>Description</td>
                                    <td>Status</td>

                                </tr>
                            </thead>

                            <tbody>


                                ${thisActivityHtml}


                            </tbody>

                        </table>

                    </div>

                </div>
            </div>
            <div class="card-aside card-aside-left user-aside toggle-slide toggle-slide-left toggle-break-lg"
                data-content="userAside" data-toggle-screen="lg" data-toggle-overlay="true">
                <div class="card-inner-group" data-simplebar>
                    <div class="card-inner">
                        <div class="user-card">
                            <div class="user-avatar">
                                <img src="${response.data.data.user.avatar}"
                                    alt="${response.data.data.user.fullName}" />
                            </div>
                            <div class="user-info">
                                <span class="lead-text">${response.data.data.user.fullName}</span>
                                <span class="sub-text">${response.data.data.user.email}</span>
                            </div>

                        </div>
                    </div>

                    <div class="card-inner p-0">
                        <ul class="link-list-menu">
                            <li><a href="/dashboard/userprofile?_userId=${response.data.data.user._id}"><em
                                        class="icon ni ni-user-fill-c"></em><span>Personal
                                        Infomation</span></a></li>


                              <li><a class="active"
                                      href="/dashboard/useraccountactivity?_userId=${response.data.data.user._id}"><em
                                          class="icon ni ni-activity-round-fill"></em><span>Account
                                          Activity</span></a></li>

                            <li><a
                                    href="/dashboard/useranalytics?_userId=${response.data.data.user._id}"><em
                                        class="icon ni ni-bell-fill"></em><span>Analytics</span></a>
                            </li>
                           
                        </ul>
                    </div>
                </div>
            </div>`;



                $("#thisusersactivitylog").html(thisActHtml);



            }

        } catch (error) {

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
            <p>${error.response.data.message}. Retry login</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
            <p>${error.message}</p>`, `error`);
            }

        }
    }

    getFanActivityLog();





    function sendMail(value, id) {

        $('#_id').val(id);
        $('#value').val(value);

        $('.messageModal').click();

    }


    function sendGeneralMail() {

        $('.generalmessageModal').click();

    }


    function accountState(value, id) {

        $('._statusid').val(id);
        $('.valueid').val(value);

        $('.accountStateModal').click();

    }


    function removeItem(value, id) {
        console.log({
            id,
            value
        });
    }


    async function processAlert() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            var value = $('#value').val();
            var id = $('#_id').val();
            var formData = new FormData(modalElem);


            route = `${baseUrl}/menu/messaging?value=${value}&_id=${id}`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: formData
            };

            response = await axios(config);

            console.log(response);

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');


            $('#modalElem')[0].reset();
            $('.summernote-basic').summernote('reset');

            messageAlert(`<h5>${response.statusText}</h5>
            <p>${response.data.message}.</p>`, `success`);



        } catch (error) {

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
        <p>${error.response.data.message}.</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
        <p>${error.message}</p>`, `error`);
            }

        }
    }


    async function processGeneralAlert() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            var value = $('#value').val();
            var formData = new FormData(generalmodalElem);


            route = `${baseUrl}/menu/generalmessaging`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: formData
            };

            response = await axios(config);

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');


            $('#generalmodalElem')[0].reset();
            $('.summernote-basic').summernote('reset');

            messageAlert(`<h5>${response.statusText}</h5>
            <p>${response.data.message}.</p>`, `success`);



        } catch (error) {

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
        <p>${error.response.data.message}.</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
        <p>${error.message}</p>`, `error`);
            }

        }
    }




    async function processSetup() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            var value = $('#value').val();
            var formData = new FormData(pricemodalElem);


            route = `${baseUrl}/setup-pricing`;
            config = {
                method: 'post',
                headers: header,
                url: route,
                data: formData
            };

            response = await axios(config);

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');


            $('#pricemodalElem')[0].reset();

            messageAlert(`<h5>${response.statusText}</h5>
            <p>${response.data.message}.</p>`, `success`);


            setTimeout(() => {
                location.reload()
            }, 2000);



        } catch (error) {


            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
        <p>${error.response.data.message}.</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
        <p>${error.message}</p>`, `error`);
            }

        }
    }





    function activateaccountState(val, id) {
        swal({
                title: "Are you sure?",
                text: "Click on OK to proceed...",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    var thisdata = {
                        _id: id,
                        accountStatus: 'active'
                    }


                    if (val == 'fanaccount') {
                        route = `${baseUrl}/menu/user-account-state`;
                    }

                    messageAlert(`<h5>Processing...</h5>
                    <p>Please wait...</p>`, `info`);

                    config = {
                        method: 'post',
                        headers: header,
                        url: route,
                        data: thisdata
                    };

                    response = axios(config).then((result) => {
                        messageAlert(`<h5>${result.statusText}</h5>
                        <p>${result.data.message}.</p>`, `success`);

                        setTimeout(() => {
                            location.reload()
                        }, 1000);

                    }).catch((error) => {
                        $('.submitBtn').removeClass('disp-0');
                        $('.spinload').addClass('disp-0');

                        if (error.response) {
                            messageAlert(`<h5>${error.response.statusText}</h5>
                        <p>${error.response.data.message}.</p>`, `error`);
                        } else {
                            messageAlert(`<h5>Oops!</h5>
                        <p>${error.message}</p>`, `error`);
                        }
                    });
                }
            });
    }



    function moveToProcessed(_id, val) {

        var thisdata = {
            _id,
            val
        }

        swal({
                title: "Are you sure?",
                text: "Click OK to confirm that payment has been processed successfully",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {

                    messageAlert(`<h5>OK!</h5>
                    <p>Please wait...</p>`, `info`);
                    // Run AXIOS

                    var config = {
                        method: "POST",
                        url: `${baseUrl}/process-payment`,
                        headers: header,
                        data: thisdata

                    }

                    const response = axios(config).then((result) => {
                        messageAlert(`<h5>${result.statusText}</h5>
                    <p>${result.data.message}.</p>`, `success`);

                        setTimeout(() => {
                            location.reload()
                        }, 2000);

                    }).catch((error) => {
                        if (error.response) {
                            messageAlert(`<h5>${error.response.statusText}</h5>
                    <p>${error.response.data.message}.</p>`, `error`);
                        } else {
                            messageAlert(`<h5>Oops!</h5>
                    <p>${error.message}</p>`, `error`);
                        }
                    });


                }
            });
    }



    function remove(account, _id) {
        swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this account!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    var config = {
                        method: "delete",
                        url: `${baseUrl}/delete-account/${_id}?account=${account}`,
                        headers: header,

                    }

                    response = axios(config).then((result) => {

                        messageAlert(`<h5>${result.statusText}</h5>
                         <p>${result.data.message}.</p>`, `success`);

                        setTimeout(() => {
                            location.reload()
                        }, 1000);

                    }).catch((error) => {
                        if (error.response) {
                            messageAlert(`<h5>${error.response.statusText}</h5>
                        <p>${error.response.data.message}.</p>`, `error`);
                        } else {
                            messageAlert(`<h5>Oops!</h5>
                        <p>${error.message}</p>`, `error`);
                        }
                    })
                }
            });
    }


    async function updateProfile(action, id) {

        try {

            $('.profilesubmitBtn').addClass('disp-0');
            $('.profilespinload').removeClass('disp-0');

            var formData = new FormData(profileUpdate);

            if (action == 'celeb') {
                route = `${baseUrl}/celebprofileupdate/${id}`;

            } else {
                route = `${baseUrl}/fanprofileupdate/${id}`;

            }

            config = {
                method: 'put',
                headers: header,
                url: route,
                data: formData
            };

            response = await axios(config);

            messageAlert(`<h5>${response.statusText}</h5>
            <p>${response.data.message}.</p>`, `success`);

            $('.profilesubmitBtn').removeClass('disp-0');
            $('.profilespinload').addClass('disp-0');

            setTimeout(() => {
                location.reload()
            }, 2000);


        } catch (error) {

            $('.profilesubmitBtn').removeClass('disp-0');
            $('.profilespinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
        <p>${error.response.data.message}.</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
        <p>${error.message}</p>`, `error`);
            }

        }


    }

    async function processStatus() {
        try {

            $('.submitBtn').addClass('disp-0');
            $('.spinload').removeClass('disp-0');

            var formData = new FormData(accountStateElem);


            if ($('.valueid').val() == 'fanaccount') {
                route = `${baseUrl}/menu/user-account-state`;
            }



            config = {
                method: 'post',
                headers: header,
                url: route,
                data: formData
            };

            response = await axios(config);

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');


            $('#accountStateElem')[0].reset();


            messageAlert(`<h5>${response.statusText}</h5>
            <p>${response.data.message}.</p>`, `success`);


            setTimeout(() => {
                location.reload()
            }, 2000)



        } catch (error) {

            $('.submitBtn').removeClass('disp-0');
            $('.spinload').addClass('disp-0');

            if (error.response) {
                messageAlert(`<h5>${error.response.statusText}</h5>
        <p>${error.response.data.message}.</p>`, `error`);
            } else {
                messageAlert(`<h5>Oops!</h5>
        <p>${error.message}</p>`, `error`);
            }

        }
    }
</script>